/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;

import java.awt.Toolkit;


/**
 *
 * @author Pedro Ivo
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/tic-tac-toe.png")));
        setResizable(false);
    }
    
    Verificador verifica = new Verificador();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        painelButoes = new javax.swing.JPanel();
        topLeft = new javax.swing.JButton();
        topMid = new javax.swing.JButton();
        topRight = new javax.swing.JButton();
        midLeft = new javax.swing.JButton();
        midMid = new javax.swing.JButton();
        midRight = new javax.swing.JButton();
        bottomLeft = new javax.swing.JButton();
        bottomMid = new javax.swing.JButton();
        bottomRight = new javax.swing.JButton();
        menu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        setForeground(java.awt.Color.darkGray);
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(500, 500));
        setName("Tic Tac Toe"); // NOI18N

        label.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setToolTipText("");
        label.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        label.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        painelButoes.setMaximumSize(new java.awt.Dimension(500, 500));
        painelButoes.setMinimumSize(new java.awt.Dimension(500, 500));
        painelButoes.setPreferredSize(new java.awt.Dimension(500, 500));
        painelButoes.setLayout(new java.awt.GridBagLayout());

        topLeft.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        topLeft.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(0, 0, 0)));
        topLeft.setIconTextGap(0);
        topLeft.setPreferredSize(new java.awt.Dimension(1, 1));
        topLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topLeftActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(topLeft, gridBagConstraints);

        topMid.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        topMid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(0, 0, 0)));
        topMid.setIconTextGap(0);
        topMid.setMaximumSize(new java.awt.Dimension(1, 1));
        topMid.setMinimumSize(new java.awt.Dimension(1, 1));
        topMid.setPreferredSize(new java.awt.Dimension(1, 1));
        topMid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topMidActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(topMid, gridBagConstraints);

        topRight.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        topRight.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 0, new java.awt.Color(0, 0, 0)));
        topRight.setIconTextGap(0);
        topRight.setMaximumSize(new java.awt.Dimension(1, 1));
        topRight.setMinimumSize(new java.awt.Dimension(1, 1));
        topRight.setPreferredSize(new java.awt.Dimension(1, 1));
        topRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topRightActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(topRight, gridBagConstraints);

        midLeft.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        midLeft.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 1, new java.awt.Color(0, 0, 0)));
        midLeft.setIconTextGap(0);
        midLeft.setMaximumSize(new java.awt.Dimension(1, 1));
        midLeft.setMinimumSize(new java.awt.Dimension(1, 1));
        midLeft.setPreferredSize(new java.awt.Dimension(1, 1));
        midLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midLeftActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(midLeft, gridBagConstraints);

        midMid.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        midMid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        midMid.setIconTextGap(0);
        midMid.setMaximumSize(new java.awt.Dimension(1, 1));
        midMid.setMinimumSize(new java.awt.Dimension(1, 1));
        midMid.setPreferredSize(new java.awt.Dimension(1, 1));
        midMid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midMidActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(midMid, gridBagConstraints);

        midRight.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        midRight.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(0, 0, 0)));
        midRight.setIconTextGap(0);
        midRight.setMaximumSize(new java.awt.Dimension(1, 1));
        midRight.setMinimumSize(new java.awt.Dimension(1, 1));
        midRight.setPreferredSize(new java.awt.Dimension(1, 1));
        midRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midRightActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(midRight, gridBagConstraints);

        bottomLeft.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        bottomLeft.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 1, new java.awt.Color(0, 0, 0)));
        bottomLeft.setIconTextGap(0);
        bottomLeft.setMaximumSize(new java.awt.Dimension(1, 1));
        bottomLeft.setMinimumSize(new java.awt.Dimension(1, 1));
        bottomLeft.setPreferredSize(new java.awt.Dimension(1, 1));
        bottomLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomLeftActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(bottomLeft, gridBagConstraints);

        bottomMid.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        bottomMid.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 1, new java.awt.Color(0, 0, 0)));
        bottomMid.setIconTextGap(0);
        bottomMid.setMaximumSize(new java.awt.Dimension(1, 1));
        bottomMid.setMinimumSize(new java.awt.Dimension(1, 1));
        bottomMid.setPreferredSize(new java.awt.Dimension(1, 1));
        bottomMid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomMidActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(bottomMid, gridBagConstraints);

        bottomRight.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        bottomRight.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, new java.awt.Color(0, 0, 0)));
        bottomRight.setIconTextGap(0);
        bottomRight.setMaximumSize(new java.awt.Dimension(1, 1));
        bottomRight.setMinimumSize(new java.awt.Dimension(1, 1));
        bottomRight.setPreferredSize(new java.awt.Dimension(1, 1));
        bottomRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomRightActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 135;
        gridBagConstraints.ipady = 135;
        painelButoes.add(bottomRight, gridBagConstraints);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(painelButoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelButoes, javax.swing.GroupLayout.PREFERRED_SIZE, 449, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        menu.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        menu.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        fileMenu.setText("File");
        fileMenu.setFocusable(false);
        fileMenu.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        menu.add(fileMenu);

        setJMenuBar(menu);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    private void topRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topRightActionPerformed
        if(verifica.verificadorPossibilidade(0, 2)) {
            topRight.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(0, 2);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_topRightActionPerformed

    private void bottomRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomRightActionPerformed
        if(verifica.verificadorPossibilidade(2, 2)) {
            bottomRight.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(2, 2);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_bottomRightActionPerformed

    private void topLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topLeftActionPerformed
        if(verifica.verificadorPossibilidade(0, 0)) {
            topLeft.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(0, 0);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_topLeftActionPerformed

    private void midMidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midMidActionPerformed
        if(verifica.verificadorPossibilidade(1, 1)) {
            midMid.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(1, 1);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_midMidActionPerformed

    private void topMidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topMidActionPerformed
        if(verifica.verificadorPossibilidade(0, 1)) {
            topMid.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(0, 1);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_topMidActionPerformed

    private void midLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midLeftActionPerformed
        if(verifica.verificadorPossibilidade(1, 0)) {
            midLeft.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(1, 0);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_midLeftActionPerformed

    private void midRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midRightActionPerformed
        if(verifica.verificadorPossibilidade(1, 2)) {
            midRight.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(1, 2);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_midRightActionPerformed

    private void bottomLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomLeftActionPerformed
        if(verifica.verificadorPossibilidade(2, 0)) {
            bottomLeft.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(2, 0);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_bottomLeftActionPerformed

    private void bottomMidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomMidActionPerformed
        if(verifica.verificadorPossibilidade(2, 1)) {
            bottomMid.setText(GestorTurno.returnJogadorLabel());
            verifica.vitoria(2, 1);
        }
        else {
            GestorMensagens.jaEscolhido();
        }
    }//GEN-LAST:event_bottomMidActionPerformed
    
    //Icone Creditos <div>Icons made by <a href="http://www.freepik.com" title="Freepik">Freepik</a> from <a href="https://www.flaticon.com/" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bottomLeft;
    private javax.swing.JButton bottomMid;
    private javax.swing.JButton bottomRight;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel label;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menu;
    private javax.swing.JButton midLeft;
    private javax.swing.JButton midMid;
    private javax.swing.JButton midRight;
    private javax.swing.JPanel painelButoes;
    private javax.swing.JButton topLeft;
    private javax.swing.JButton topMid;
    private javax.swing.JButton topRight;
    // End of variables declaration//GEN-END:variables
}
