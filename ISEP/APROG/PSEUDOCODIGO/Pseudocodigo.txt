//EXERCICIO 1

ED:
	nota1, nota2, nota3, peso1, peso2, peso3 INTEIRO
	mediaPesada REAL
ALG
INICIO
	LER(nota1, nota2, nota3)
	LER(peso1, peso2, peso3)

		mediaPesada <- (nota1*peso1+ nota2*peso2+ nota3*peso3) /(peso1+peso2+peso3)
	ESCREVER(mediaPesada)
	
	SE(mediaPesada >= 8) 
		ESCREVER("Nota Minima Exigida alcançada)
	SENAO
		ESCREVER("Não alcançada a nota minima exigida")
	FIMSE
FIM

//EXERCICIO 2

ED:
	num, dig1, dig2, dig3 INTEIRO
ALG
INICIO
	LER(num)
	SE (num <100 OU num >999)
		ESCREVER(“Número não tem 3 dígitos”)
	SENÃO
		dig3 <- num MOD 10
		dig2 <- (num DIV 10) MOD 10
		dig1 <- (num DIV 100) MOD 10
		ESCREVER(dig1, “ ”, dig2, “ ”, dig3)
	FIMSE
	
	SE((num MOD 2) == 0)
		ESCREVER("O número é par")
	SENÃO
		ESCREVER("O número é impar")
	FIMSE
FIM

//EXERCICIO 3


ED:
	dig1, num, numQuad INTEIRO
ALG
INICIO
	LER(dig1)
	SE((dig1 > 0) && (dig1 < 9) && (dig1 MOD 2 != 0))
		LER(dig2)
		SE((dig2 > 0) && (dig2 < 9) && (dig2 MOD 2 != 0))
			LER(dig3)
			SE((dig2 > 0) && (dig2 < 9) && (dig2 MOD 2 != 0))
				num <- dig1*100 + dig2*10 + dig3
				numQuad = ROOT(num)
				ESCREVER("O numero introduzido é ", num, " e o quadrado desse número é ", numQuad)
			SENAO n 
				ESCREVER("Numero introduzido é inválido. Operação Cancelada")
			FIMSE
		SENAO
			ESCREVER("Numero introduzido é inválido. Operação Cancelada")
		FIMSE
	FIMSE
FIM

//EXERCICIO 4

ED:
	dig1, dig2, dig3, num, numQuad INTEIRO
ALG
INICIO
	LER(dig1)		
	SE((dig1 <= 9) && (dig1 >=1))
		ESCREVER("Introduza o algarismo 2")
		LER(dig2)
		
		SE((dig2 <= 9) && (dig2 > dig1))
			ESCREVER("Introduza o algarismo 3")
			LER(dig3)
			
			//Se chegar a este ponto é porque o número introduzido é válido
			SE((dig3 <= 9) && (dig3 > dig2))
				num <- dig1 * 100 + dig2 * 10 + dig3
				numQuad <- ROOT(num)
				
				ESCREVER("O valor introduzido é ", num, " e o quadrado é ", numQuad)
			SENAO
				ESCREVER("Introduza apenas um algarismo, operação cancelada")
			FIMSE
		SENAO
			ESCREVER("Introduza apenas um algarismo, operação cancelada")
		FIMSE
	SENAO
		ESCREVER("Introduza apenas um algarismo")
	FIMSE
FIM

//EXERCICIO 5

a) Este algoritmo dedica-se a receber a percentagem de alunos que foi aprovado 
numa turma e a determinar se a turma foi "Má, Fraca, Razoável, Boa ou Excelente"

b)

ED:
aprovados limiteMau limiteFraco limiteRazoavel limiteBom REAL
ALG
INICIO
	LER(aprovados)
	
	limiteMau <- 0.2
	limiteFraco <- 0.5
	limiteRazoavel <- 0.7
	limiteBom <- 0.9
	
	SE (aprovados <0 OU aprovados >1) ENTÃO
		ESCREVER(“Valor Inválido”)
	SENÃO
		SE (aprovados < limiteMau) ENTÃO
			ESCREVER(“Turma Má”)
		SENÃO
			SE (aprovados < limiteFraco) ENTÃO
				ESCREVER(“Turma Fraca”)
			SENÃO
				SE (aprovados < limiteRazoavel) ENTÃO
					ESCREVER(“Turma Razoável”)
				SENÃO
					SE (aprovados < limiteBom) ENTÃO
						ESCREVER(“Turma Boa”)
					SENÃO
						ESCREVER(“Turma Excelente”)
					FIMSE
				FIMSE
			FIMSE
		FIMSE
	FIMSE
FIM

//EXERCICIO 6

ED:
	valor REAL
ALG
INICIO
	LER(valor)
	SE(val > 200)
		valor <- valor * 0.4
	SENAO
		SE(val > 100)
			valor <- valor * 0.6
		SENAO
			SE(valor > 50)
				valor <- valor * 0.7
			SENAO
				valor <- valor * 0.8
			FIMSE
		FIMSE
	FIMSE
FIM

//EXERCICIO 7

a) 

ED:
	lado1, lado2, lado3 INTEIRO
ALG
INICIO
	LER(lado1)
	LER(lado2)
	LER(lado3)
	
	SE((lado1 == lado2) == lado3)
		ESCREVER("O triangulo é equilátero")
	SENAO SE((lado1 != lado2) && (lado1 != lado3) && (lado2 != lado3))
		ESCREVER("O triangulo é escaleno")
	SENAO
		ESCREVER("O triangulo é isosceles")
	FIMSE
FIM

b)

ED:
	lado1, lado2, lado3 INTEIRO
ALG
INICIO
	LER(lado1)  
	LER(lado2)
	LER(lado3)
	
	SE((lado1+lado2 >= lado3) && (lado2+lado3>=lado1) && (lado1+lado3>=lado2))
		SE((lado1 == lado2) == lado3)
			ESCREVER("O triangulo é equilátero")
		SENAO SE((lado1 != lado2) && (lado1 != lado3) && (lado2 != lado3))
			ESCREVER("O triangulo é escaleno")
		SENAO
			ESCREVER("O triangulo é isosceles")
		FIMSE
	SENAO
		ESCREVER("Triangulo é impossivél)
	FIMSE
FIM

//EXERCICIO 8

a)

ED:
	ang[2] MATRIZ INTEIRA
ALG
INICIO
	LER(ang[0])
	LER(ang[1])
	LER(ang[2])
	PARA(i = 0, i < 3) PASSO i=i+1
		SE(ang[i] == 90)
			ESCREVER("O triangulo é retangulo")
			i <- 3
		SENAO SE(ang[i] > 90)
			ESCREVER("O triangulo é obtusangulo")
			i <- 3
		SENAO SE(i == 2)
			ESCREVER("O retangulo é acutângulo")
		FIMSE
	FIMPARA
FIM

b)

ED:
	ang[2] MATRIZ INTEIRA
	existe INTEIRO
ALG
INICIO
	LER(ang[0])
	LER(ang[1])
	LER(ang[2])
	existe <- ang[0] + ang[1] + ang[2]
	SE(existe == 180)
		PARA(i = 0, i < 3) PASSO i=i+1
			SE(ang[i] == 90)
				ESCREVER("O triangulo é retangulo")
				i <- 3
			SENAO SE(ang[i] > 90)
				ESCREVER("O triangulo é obtusangulo")
				i <- 3
			SENAO SE(i == 2)
				ESCREVER("O retangulo é acutângulo")
			FIMSE
		FIMPARA
	SENAO
		ESCREVER("Triangulo é impossivel")
	FIMSE
FIM

///EXERCICIO 9

ED:
	horaPartida horaChegada horaViagem minutoChegada minutoPartida minutoViagem INTEIRO
ALG
INICIO
	LER(horaPartida)
	LER(minutoPartida)
	LER(horaViagem)
	LER(minutoViagem)
	
	horaChegada <- horaPartida + horaViagem
	minutoChegada <- minutoPartida + minutoViagem
	
	SE(horaChegada > 24)
		//Só posso subtrair aqui porque diz expressamente no enunciado que as viagens nunca tem mais de 24 horas
		horaChegada <- horaChegada - 24
		ESCREVER("O comboio chega no da a seguir)
	FIMSE
	SE(minutoChegada > 60)
		minutoChegada <- minutoChegada - 60
		horaChegada <- horaChegada + 1
	FIMSE
	ESCREVER("O comboio chega ás ", horaChegada, "h", minutoChegada)
FIM

//EXERCICIO 10

ED:
	hora, minuto, segundo, segundoProcessamento
ALG
INICIO
	LER(hora)
	LER(minuto)
	LER(segundo)
	LER(segundoProcessamento)
	
	ENQUANTO(segundoProcessamento > 60)
		ENQUANTO(segundoProcessamento > 3600)
			segundoProcessamento <- segundoProcessamento - 3600
			hora <- hora + 1
		FIMENQUANTO
		segundoProcessamento <- segundoProcessamento - 60
		minuto <- minuto + 1
	FIMENQUANTO
	segundo <- segundo + segundoProcessamento
	
	ESCREVER("O processamento acaba ás ", hora, "h", minuto, "m", segundo)
FIM

//EXERCICIO 11

a)

ED:
	x REAL
ALG
INICIO
	LER(x)
	SE(x < 0)
		ESCREVER("A solução da função é ", x)
	SENAO SE(x == 0)
		ESCREVER("A solução da função é 0)
	SENAO SE(x > 0)
		x <- x ^2 - 2 * x
		ESCREVER("A solução da função é ", x)
	FIMSE
FIM

//EXERCICIO 12

ED:
	x1, y1, x2, y2, d REAL
ALG
INICIO
	LER(x1)
	LER(y1)
	LER(x2)
	LER(y2)
	
	d <- SQRT((x2 - x1) ^2 + (y2 - y1) ^2)
	
	ESCREVER("A distancia entre os dois pontos é ", d)
FIM

//EXERCICIO 13

ED:
	segundoCalc segundos hora minuto
ALG
INICIO
	LER(segundoCalc)
	segundos <- segundoCalc
	SE(segundos > 86400)
		ESCREVER("Numero de segundos introduzidos é superior a 1 dia")
	SENAO	
		ENQUANTO(segundos > 60)
			ENQUANTO(segundos > 3600)
				hora <- hora + 1
				segundos <- segundos - 3600
			FIMENQUANTO
			minuto <- minuto + 1
			segundos <- segundos - 60
		FIMENQUANTO
		
		ESCREVER(hora, "h", minuto, "m", segundos, "s")
		
		SE(segundoCalc >= 21600)
			SE(segundoCalc >= 43201)
				SE(segundoCalc >= 72001)
					ESCREVER("Boa noite")
				SENAO
					ESCREVER("Boa tarde")
				FIMSE
			SENAO
				ESCREVER("Bom dia")
			FIMSE
		SENAO
			ESCREVER("Boa noite")
		FIMSE
	FIMSE
FIM

//EXERCICIO 14

ED:
	areaEd  salarioDia rendLitro custoLitro numPintores REAL
	diasGastos  salarioTotal custoTinta REAL
ALG
INICIO
	LER(areaEd)
	LER(custoLitro)
	LER(rendLitro)
	LER(salarioDia)
	
	//Isto calcula quanta tinta vai ser necessaria e depois multiplica os litros necessarios pelo preço de cada litro
	custoTinta <- (areaEd / rendLitro) * custoLitro
	
	SE(areaEd > 1000)
		numPintores <- 4
	SENAO
		SE(areaEd > 300)
			numPintores <- 3
		SENAO
			SE(areaEd > 100)
				numPintores <- 2
			SENAO
				numPintores <- 1
			FIMSE
		FIMSE
	FIMSE
	
	//Divide-se a área por 2m e obtem-se as horas necessárias, e depois multiplica-se pelo custo por hora do pintor
	diasGastos <- (areaEd / (2 * numPintores)) / 24
	salarioTotal <- salarioDia * diasGastos * numPintores
	
	ESCREVER("Custo discriminado: ", salarioTotal + custoLitro)
	ESCREVER("Custo mão-de-obra: ", salarioTotal)
	ESCREVER("Custo tinta: ", custoTinta
FIM
