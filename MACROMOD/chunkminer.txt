$${

//Script made by Metriximor, thanks to Sanwi for examples and syntax help

//Testing /teleport Metriximor 687 4 703 -180 0
 
if(!runbool);
{
    log(Script Started);
    //achievementget(You ran a chunk mining script!);
    set(runbool);
	
	//Declares initial flagvariables;
	turnleft=false;
	secondflag=false;
	secondpos=false;
	
	//Sets attack wait;
	#attack_wait=0;
	
	//Gets starting coordinates
    #xstarting=%XPOS%;
    #ystarting=%YPOS%;
    #zstarting=%ZPOS%;
    
    //Makes the player look in the correct direction and calculates the other side of the chunk
	
    //South
	if((%YAW% < 45) || (%YAW% >= 315));
	{
        look(180,25);
		#xpredicted=#xstarting+15;
		#zpredicted=#zstarting+15;
		log(X pred: %#xpredicted% Z pred: %#zpredicted%);
	}
	//East
    elseif((%YAW% < 314) && (%YAW% >= 225));
	{
        look(90,25);
		#xpredicted=#xstarting+15;
		#zpredicted=#zstarting-15;
		log(X pred: %#xpredicted% Z pred: %#zpredicted%);
	}
	//North
    elseif((%YAW% < 224) && (%YAW% >= 135));
	{
        look(0,25);
		
		//Change this value to whatever size of the square you want to mine
		#prompt=4;
		
		//Calculates the other side of the chunk
		#predictedturns=(#prompt/2);
		dec(#prompt);
		#countdown=#prompt;
		#timesturned=0;
		completelap=false;
		
		do;
		{
			//Keys that it should hold down
			keydown(sneak);
			keydown(forward);
			//keydown(sprint);
			//log(%completelap%);
			
			//Movement controller
			if(completelap==false);
			{
				//This bit of code makes sure the block is broken and the current tool is used;
				do(14);
				{
					key(attack);
				}
				loop;
				
				//Gets the coordinates at the moment it broke the block
				#xdirtcheckpos=#xcurrentpos;
				#zdirtcheckpos=#zcurrentpos;
				
				#xcurrentpos=%XPOS%;
				#zcurrentpos=%ZPOS%;
				//If this is true, then it means the block didn't break			
				if((#xcurrentpos==#xdirtcheckpos) && (#zcurrentpos==#zdirtcheckpos));
				{
					//Switches to shovel and tries to dig again
					slot(9);
					do(15);
					{
						key(attack);
					}
					loop;
					//Returns to the pickaxe on slot 1
					slot(1);
					wait(150ms);
					
					#xcurrentpos=%XPOS%;
					#zcurrentpos=%ZPOS%;
					#ycurrentpos=%YPOS%;
					//If it's still in the same position, that means the following block is a ore);
					//log(X cur: %#xcurrentpos% X back: %#xdirtcheckpos% Z cur: %#zcurrentpos% Z back: %#zdirtcheckpos%);
					if((#xcurrentpos==#xdirtcheckpos) && (#zcurrentpos==#zdirtcheckpos));
					{
						//This should mine the ore
						if(#ycurrentpos<=16);
						{
							//Changes to slot 6, where there should be a silk touch pickaxe;
							slot(6);
						}
						endif;
						log(Found an ore!);
						do(20)
						{
							key(attack);
						}
						loop;
						slot(1);
					}
					endif;
				}
				endif;
			
				//This one moves the player
				
				//Gets current coordinates
				#xcurrentpos=%XPOS%;
				#zcurrentpos=%ZPOS%;
			
				//log(%#timesturned%);
			
				#xpredicted=#xstarting-#countdown;
				#zpredicted=#zstarting-#countdown;
				//log(X pred: %#xpredicted% Z pred: %#zpredicted%);
				if(turnleft==false);
				{
					if(#zpredicted==#zcurrentpos);
					{
						wait(150ms);
						look(270,25);
						turnleft=true;
						//echo(I got to the first corner flag:%turnleft%);
					}
					endif;
				}
				else;
				{
					//If this is true, that means we are on the opposite corner of the chunk
					if((#xcurrentpos==#xpredicted) && (secondflag=false));
					{
						wait(150ms);
						look(180,25);
						//Now it has to go back to the starting position, so I reset the flags
						
						inc(#timesturned);
						secondflag=true;
						
						Calculates where it has to go
						#xback=#xstarting-#timesturned;
						#zback=#zstarting-#timesturned-1;
						//log(Z pred: %#zpredicted% countdown: %#countdown% timesturned:%#timesturned%);
						dec(#countdown);
						
						//log(X back: %#xback% Z back: %#zback%);
					}
					elseif(secondflag==true);
					{
						//log(%secondpos%);
						if((#zcurrentpos==#zback) && (#xcurrentpos!=#xback));
						{
							wait(150ms);
							look(90,25);
						}
						elseif((#zcurrentpos==#zback) && (#xcurrentpos==#xback));
						{
							wait(150ms);
							look(0,25);
							keyup(forward);
							//echo(finishedlap);
							secondflag=false;
							turnleft=false;
							//log(%#timesturned% %#predictedturns%);
							if(#timesturned==#predictedturns);
							{
								completelap=true;
							}
							endif;						}
						endif;
					}
					endif;
				}
				endif;
				//log(X pred: %#xpredicted% Z pred: %#zpredicted% Turn left: %turnleft% Z currentpos: %#zcurrentpos%);
			}
			elseif(completelap==true);
			{
				look(180,0);
				//Checks the food level
				if(%HUNGER%<18);
				{
					slot(5);
					do(150);
					{
						key(use);
					}
					loop;
				}
				endif;
				
				//Gets current coordinates
				#xcurrentpos=%XPOS%;
				#zcurrentpos=%ZPOS%;
					
				//When it gets to this point it means we finished a whole y level;
				//log(Z current: %#zcurrentpos% && %#zstarting% && xcurrentpos: %#xcurrentpos% && %#xstarting% );
				if((#zcurrentpos==#zstarting) && (#xcurrentpos!=#xstarting));
				{
					wait(150ms);
					do;
					{
						look(90,25);
						//I have to get the coordinates again so the condition checks;
						#xcurrentpos=%XPOS%;
						#zcurrentpos=%ZPOS%;
					}
					until((#xcurrentpos==#xstarting) && (#zcurrentpos==#zstarting));
					wait(150ms);
				}
				elseif((#xcurrentpos==#xstarting) && (#zcurrentpos==#zstarting));
				{
					//Means we are back in starting position and we dug out a entire layer
					look(0,90);
					keyup(forward);
					#ydirtcheckpos=#ycurrentpos;
					//Breaks the block under the player, WARNING, IT DOESN'T CHECK FOR LAVA!!
					do(14);
					{
						key(attack);
					}
					loop;
					
					#ycurrentpos=%YPOS%;
					//If this is true, then it means the block didn't break			
					if((#ycurrentpos==#ydirtcheckpos));
					{
						wait(150ms);
						//Switches to shovel and tries to dig again
						slot(9);
						do(15);
						{
							key(attack);
						}
						loop;
						//Returns to the pickaxe on slot 1
						slot(1);
						wait(150ms);
						
						#ycurrentpos=%YPOS%;
						//If it's still in the same position, that means the following block is a ore);
						//log(X cur: %#xcurrentpos% X back: %#xdirtcheckpos% Z cur: %#zcurrentpos% Z back: %#zdirtcheckpos%);
						if((#ycurrentpos==#ydirtcheckpos));
						{
							//This should mine the ore
							//It checks if the height is less than 16 because less than 16 can be a diamond ore
							if(#ycurrentpos<=16);
							{
								//Changes to slot 6, where there should be a silk touch pickaxe;
								slot(6);
							}
							endif;
							log(Found an ore!);
							do(20)
							{
								key(attack);
							}
							loop;
							slot(1);
						}
						endif;
					}
					endif;
					
					if(%YPOS%<#ystarting);
					{
						look(0,25);
						unset(completelap);
						log(One level down!);
						//Resets some flags;
						#countdown=#prompt;
						#timesturned=0;
					}
					endif;
				}
				endif;
			}
			endif;
		//log(%completelap%);
		}
		while(runbool==true);
	}
	//West
    elseif((%YAW% < 134) && (%YAW% >= 45));
	{
        look(270,25);     
		#xpredicted=#xstarting-15;
		#zpredicted=#zstarting+15;
		log(X pred: %#xpredicted% Z pred: %#zpredicted%);
	}
    endif;

}    
elseif(runbool);
{
    runbool = false;
	//unsets the script
	keyup(sneak);
	keyup(forward);
    
    //In case the user is using tabbyChat and it's avoiding spam, this is mainly for testing purposes)
    log(Chat Cleared);
    //clearchat();
    log(Script finished);
    stop();
}
endif;
 
stop();

}$$
